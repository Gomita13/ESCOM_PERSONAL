.include"m8535def.inc"
.def aux = r16
.def msk = r17
.def ini = r18
.def tc1h = r19
.def tc1l = r20
.def auc = r21
.def wins = r0
.def dirl = r22
.def dirh = r23 
.macro eeprw
	ldi dirh, @0
	ldi dirl, @1
	mov aux, wins
	rcall EEPROM_write
.endm
.macro eeprr
	ldi dirh, @0
	ldi dirl, @1
	rcall EEPROM_read
.endm
reset:
	rjmp main
	.org $004
	rjmp onda
	.org $008
	rjmp tmpo
	rjmp cliente
	.org $012
	rjmp reset_eeprom
main:
	ldi aux,low(ramend)
	out spl,aux
	ldi aux,high(ramend)
	out sph,aux
	clr aux
	mov wins, aux
	eeprw $00, $00
	ser aux
	out ddra,aux
	out ddrc,aux
	out ddrd,aux
	out portb,aux
	ldi aux,6
	out tccr0,aux
	ldi aux,0b01000101
	out timsk,aux
	ldi aux, 0b01000000
	out mcucsr, aux
	ldi aux, $20
	out gicr, aux
	sei
	ldi aux,250
	out tcnt0,aux
	ldi msk,1
	ldi ini,256-141
	ldi tc1h,$B3
	ldi tc1l,$B5
	out tcnt1h,tc1h
	out tcnt1l,tc1l
nada:
	in auc,tcnt0
	clr aux
	sub aux,auc
	out portc,aux
	eeprr $00,$00
	out portd, aux
	rjmp nada
onda:
	out tcnt2,ini
	in aux,pina
	eor aux,msk
	out porta,aux
	reti
tmpo:
	ldi aux,0
	out tccr2,aux
	out tccr1b,aux
	ldi aux,250
	out tcnt0,aux
	inc wins
	eeprw $00,$00
	reti
cliente:
	ldi aux,2
	out tccr2,aux
	ldi aux,4
	out tccr1b,aux
    out tcnt1h,tc1h
	out tcnt1l,tc1l
	reti
reset_eeprom:
	clr wins
	eeprw $00,$00
EEPROM_read:
	sbic EECR, EEWE
	rjmp EEPROM_read
	out EEARH, r23
	out EEARL, r22
	sbi EECR, EERE
	in r16, EEDR
	ret
EEPROM_write:
	sbic EECR, EEWE
	rjmp EEPROM_write
	out EEARH, r23
	out EEARL, r22
	out EEDR, r16
	sbi EECR, EEMWE
	sbi EECR, EEWE
	ret
	
; 
; para 5 segundos se necesitan 5,000,000 ciclos
;           19531.25x256=5000000
;      65536-19531=46005=$b3b5
;                tcnt1h <= $B3
;                tcnt1l <= $B5
